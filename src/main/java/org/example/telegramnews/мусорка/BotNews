package org.example.telegramnews.bot;

import lombok.RequiredArgsConstructor;

import org.example.telegramnews.service.NewsClientService;
import org.example.telegramnews.service.SubscriptionService;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;



@Component
@RequiredArgsConstructor
public class BotNews extends TelegramLongPollingBot {

    private final NewsClientService newsClientService;
    private final SubscriptionService subscriptionService;



    @Value("${telegram.bot.username}")
    private String botUsername;

    @Value("${telegram.bot.token}")
    private String botToken;

    @Override
    public String getBotUsername() {
        return botUsername;
    }

    @Override
    public String getBotToken() {
        return botToken;
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            Long chatId = update.getMessage().getChatId();
            String userMessage = update.getMessage().getText().trim().toLowerCase();

            if (userMessage.equals("/start")) {
                subscriptionService.subscribe(chatId);
                sendMessage(chatId, "Вы подписались на ежедневные новости о Java!");
            } else {
                sendMessage(chatId, "Напишите /start для подписки на Java-новости.");
            }
        }
    }

    public void sendMessage(Long chatId, String text) {
        SendMessage message = new SendMessage(chatId.toString(), text);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}
